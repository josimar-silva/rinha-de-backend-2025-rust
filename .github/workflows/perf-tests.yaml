name: Performance Tests

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Docker Builds"]
    types: [completed]
    branches: [main]

jobs:    
  performance-tests:
    runs-on: ubuntu-24.04

    env:
      RESULTS_FILE_PATH: rinha/participantes/${{ github.repository_owner }}/partial-results.json

    permissions:
      contents: write
      packages: write

    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📦 Checkout Rinha Repository
        uses: actions/checkout@v4
        with:
          repository: zanfranceschi/rinha-de-backend-2025
          path: ./rinha
          submodules: recursive

      - name: 🐳 Setup Docker Compose
        uses: docker/setup-compose-action@v1

      - name: 🛠️ Setup jq
        run: sudo apt-get install -y jq

      - name: 🧪 Setup k6
        uses: grafana/setup-k6-action@v1
        with:
          k6-version: '1.1.0'

      - name: 💰 Setup Payment Processors
        run: |
          pushd rinha/payment-processor/ > /dev/null
            docker compose up --build -d 1> /dev/null 2>&1
          popd > /dev/null

      - name: 📈 Create reports folder
        run: mkdir -p reports/{backend-01,backend-02}

      - name: 🚀 Setup ${{ github.repository_owner }} Backend
        run: |
          docker compose --profile perf up --build -d 1> /dev/null 2>&1    

      - name: 🔍 Check running containers
        run: |         
          docker ps

      - name: 📈 Run Performance Tests
        run: |
          mkdir -p rinha/participantes/${{ github.repository_owner }}
          touch ${{ env.RESULTS_FILE_PATH }}
          pushd rinha/rinha-test > /dev/null
            k6 run --out json=${{ github.workspace }}/k6_results.json rinha.js
          popd > /dev/null
        env:
          MAX_REQUESTS: ${{ vars.MAX_REQUESTS }}
          PARTICIPANT: ${{ github.repository_owner }}

      - name: ⬇️ Tear Down Environment
        run: |
          echo "Containers Still running:"
          docker ps
          echo "Stopping containers..."
          docker compose --profile perf stop --timeout 30

      - name: ⬆️ Upload Partial Results
        uses: actions/upload-artifact@v4
        with:
          name: partial-results-${{ github.sha }}.json
          path: ${{ env.RESULTS_FILE_PATH }}

      - name: ⬆️ Upload Flamegraph
        uses: actions/upload-artifact@v4
        with:
          name: flamegraph-${{ github.sha }}.json
          path: reports/**/*.svg

      - name: 📊 Process Performance Results
        run: |
          PERF_FILE="perf.md"
          COMMIT_SHA="${{ github.sha }}"
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

          echo "Extracting metrics from $RESULTS_FILE_PATH"
          P99=$(jq -r '.p99.valor' $RESULTS_FILE_PATH)
          SUCCESSFUL_REQUESTS=$(jq -r '.pagamentos_solicitados.qtd_sucesso' $RESULTS_FILE_PATH)
          FAILED_REQUESTS=$(jq -r '.pagamentos_solicitados.qtd_falha' $RESULTS_FILE_PATH)
          LAG=$(jq -r '.lag.lag' $RESULTS_FILE_PATH)
          SCORE=$(jq -r '.total_liquido' $RESULTS_FILE_PATH)
          COMMIT_URL="https://github.com/${{ github.repository }}/commit/${COMMIT_SHA}"

          echo "Creating or appending data to perf.md"
          
          if [ ! -f "$PERF_FILE" ]; then
            echo "# Performance Test Results" > "$PERF_FILE"
            echo "" >> "$PERF_FILE"
            echo "| Commit | Timestamp | P99 (ms) | Success Requests | Failed Requests | Lag | Score |" >> "$PERF_FILE"
            echo "|--------|-----------|----------|------------------|-----------------|-----|-------|" >> "$PERF_FILE"
          fi

          echo "| [${COMMIT_SHA::7}](${COMMIT_URL}) | ${TIMESTAMP} | ${P99} | ${SUCCESSFUL_REQUESTS} | ${FAILED_REQUESTS} | ${LAG} | ${SCORE} |" >> "$PERF_FILE"
          
          echo "Data added to $PERF_FILE"
          cat "$PERF_FILE"

      - name: 📤 Commit Performance Results
        if: github.ref == 'refs/heads/main'
        run: |
          git config user.name "radagastbot[bot]"
          git config user.email "radagastbot[bot]@users.noreply.github.com"
          git add perf.md
          git commit -m "docs(performance): Update performance test results for ${{ github.sha }}"
          git push